import numpy as np
import pandas as pd
from gsa import Gsa
from clonalg import Clonalg
from imperialistic import Imperialistic

def f(var):
    x1, x2 = var
    return x1**2 + x2**2 - 10*(np.cos(2*np.pi*x1) + np.cos(2*np.pi*x2)) + 20

def f2(var):
    x1, x2 = var
    return x1**3 + x2**3

def f3(var):
    x1, x2 = var
    return np.sin(x1+x2**2)

def ffit(var):
    x1 = var
    return 1/x1

def fitExp4(var):
    x = var
    return 1+np.exp(x)

def Matyas(var):
    x1, x2 = var
    return 0.26*(x1**2 + x2**2) - 0.48*(x1*x2)

#N = list(range(10,20,10))
#gen = list(range(5,20,5))
#p = list(map(lambda x: x/10.0, range(5,35,10)))
#beta = list(map(lambda x: x/10.0, range(5,35,10)))
#fi = list(map(lambda x: x/10.0, range(1,8,2)))
#c = list(map(lambda x: x/10.0, range(1,6,1)))
#k = list(map(lambda x: x/10.0, range(1,8,2)))
#ex = StatisticClonalg(N=N, generations=gen, p_max=p, beta=beta, fi=fi, c=c, k=k)
#data = ex.check_all(f)
#df = pd.DataFrame(data, columns=['N', 'value'])
#print(data)


gs = []
for i in range(1, 12):
    model = Gsa(N=i*10).optimize(Matyas)
    gs.append(model)
print(pd.DataFrame(gs))